on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

name: Continuous integration

jobs:
  udeps:
    name: Udeps
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v18
      - uses: jrobsonchase/direnv-action@v0.6
      - uses: actions-rs/cargo@v1
        with:
          command: udeps
          args: --workspace --all-targets --all-features

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v18
      - uses: jrobsonchase/direnv-action@v0.6
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v18
      - uses: jrobsonchase/direnv-action@v0.6
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features --workspace -- -D warnings

  test-nix:
    name: Test Nix
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v18
      - uses: jrobsonchase/direnv-action@v0.6
      - uses: actions-rs/cargo@v1
        env:
          NGROK_AUTHTOKEN: ${{ secrets.NGROK_AUTHTOKEN }}
        with:
          command: test
          args: --features=paid-tests,long-tests --workspace --all-targets

  test-stable:
    name: Test Stable
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        env:
          NGROK_AUTHTOKEN: ${{ secrets.NGROK_AUTHTOKEN }}
        with:
          command: test
          args: --features=paid-tests,long-tests --workspace --all-targets

  semver:
    name: Semver Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crate: [ngrok, muxado]
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v18
      - uses: jrobsonchase/direnv-action@v0.6
      - uses: actions-rs/cargo@v1
        name: semver checks
        with:
          command: semver-checks
          args: check-release -p ${{ matrix.crate }}

  dry-publish:
    name: Dry Publish
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        crate: [ngrok, muxado]
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v18
      - uses: jrobsonchase/direnv-action@v0.6
      - name: cargo publish
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: -p ${{ matrix.crate }} --dry-run